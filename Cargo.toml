[package]
name = "lead_barry"
version = "0.1.0"
license = "MIT"
authors = [
  "Erik Rogers <erik@underlogic.tech>",
  "Dmytro Krasnianskyi <k.dimonych@gmail.com>",
]
edition = "2024"
repository = "https://github.com/kdimonych/lead_barry"
description = "The lead-acid battery management controller written in Rust for Raspberry Pi Pico."
readme = "README.md"
keywords = ["lead-acid", "battery"]
categories = ["embedded", "no-std", "no-std::no-alloc"]


[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7"
embedded-hal-async = "1.0"
# Embedded graphics support
embedded-graphics = "0.8"

# Debug logging
defmt = "1"
defmt-rtt = "1"
panic-probe = { version = "1", features = ["print-defmt"] }

# Matrix and linear algebra libraries for embedded systems
nalgebra = { version = "0.34.1", default-features = false, features = ["macros", "libm"] }
heapless = "0.9.1"
micromath = "2.1"
libm = "0.2"

# Critical section and atomics for embedded
portable-atomic = { version = "1.11.1", features = ["critical-section"] }
critical-section = "1.2.0"
static_cell = "2.1.1"

# Embassy
embassy-embedded-hal = "0.5.0"
embassy-executor = { version = "0.9", features = ["arch-cortex-m", "executor-thread", "defmt"] }
embassy-time = { version = "0.5", features = ["defmt", "defmt-timestamp-uptime"] }
embassy-rp = { version = "0.8", features = ["rp2040", "defmt", "unstable-pac", "time-driver", "critical-section-impl", "intrinsics", "rom-v2-intrinsics"] }
embassy-sync = "0.7"
embassy-futures = "0.1"
embassy-net = { version = "0.7", features = ["defmt", "tcp", "udp", "dhcpv4", "medium-ethernet"] }

# WiFi driver for the CYW43 chip on the Pico W
cyw43 = "0.5"
cyw43-pio = "0.8"

# Alternative: Use rp-pico but you'll need to handle CYW43 separately
#rp-pico = "0.9"

# but you can use any BSP. Uncomment this to use the pro_micro_rp2040 BSP instead
# sparkfun-pro-micro-rp2040 = "0.8"

# If you're not going to use a Board Support Package you'll need these:
# rp2040-hal = { version="0.11", features=["rt", "critical-section-impl"] }
# rp2040-boot2 = "0.3"

# Prerepherial device drivers
ssd1306 = { version = "0.10", features = ["async"] }
ina3221_async = { git = "https://github.com/kdimonych/ina3221_async", branch = "DmytroKrasnianskyi/async" }

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
